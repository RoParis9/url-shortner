import { PrismaClient } from '@prisma/client';
import { PrismaUrlRepository } from './repositories/prisma-url.repository';
import { PrismaUserRepository } from './repositories/prisma-user.repository';
import { PrismaClickRepository } from './repositories/prisma-click.repository';
import { PrismaSessionRepository } from './repositories/prisma-session.repository';
import { PrismaAnalyticsRepository } from './repositories/prisma-analytics.repository';
import { BcryptPasswordHasher } from './services/bcrypt-password-hasher';
import { JwtTokenGenerator } from './services/jwt-token-generator';
import { CreateUrlUseCase } from '../application/use-cases/url/create-url.use-case';
import { GetUserUrlsUseCase } from '../application/use-cases/url/get-user-urls.use-case';
import { UpdateUrlUseCase } from '../application/use-cases/url/update-url.use-case';
import { DeleteUrlUseCase } from '../application/use-cases/url/delete-url.use-case';
import { RedirectUrlUseCase } from '../application/use-cases/url/redirect-url.use-case';
import { BulkCreateUrlsUseCase } from '../application/use-cases/bulk/bulk-create-urls.use-case';
import { RegisterUserUseCase } from '../application/use-cases/auth/register-user.use-case';
import { LoginUserUseCase } from '../application/use-cases/auth/login-user.use-case';
import { RefreshTokenUseCase } from '../application/use-cases/auth/refresh-token.use-case';
import { LogoutUserUseCase } from '../application/use-cases/auth/logout-user.use-case';
import { GetUrlAnalyticsUseCase } from '../application/use-cases/analytics/get-url-analytics.use-case';
import { UpdateUserProfileUseCase } from '../application/use-cases/user/update-user-profile.use-case';
import { DeleteUserAccountUseCase } from '../application/use-cases/user/delete-user-account.use-case';
import { UrlController } from '../interfaces/controllers/url.controller';
import { AuthController } from '../interfaces/controllers/auth.controller';
import { AnalyticsController } from '../interfaces/controllers/analytics.controller';
import { UserController } from '../interfaces/controllers/user.controller';
import { AuthMiddleware } from './middleware/auth.middleware';
export declare class Container {
    private static instance;
    private prisma;
    private constructor();
    static getInstance(): Container;
    getPrisma(): PrismaClient;
    getUrlRepository(): PrismaUrlRepository;
    getUserRepository(): PrismaUserRepository;
    getClickRepository(): PrismaClickRepository;
    getSessionRepository(): PrismaSessionRepository;
    getAnalyticsRepository(): PrismaAnalyticsRepository;
    getPasswordHasher(): BcryptPasswordHasher;
    getTokenGenerator(): JwtTokenGenerator;
    getCreateUrlUseCase(): CreateUrlUseCase;
    getGetUserUrlsUseCase(): GetUserUrlsUseCase;
    getUpdateUrlUseCase(): UpdateUrlUseCase;
    getDeleteUrlUseCase(): DeleteUrlUseCase;
    getRedirectUrlUseCase(): RedirectUrlUseCase;
    getBulkCreateUrlsUseCase(): BulkCreateUrlsUseCase;
    getRegisterUserUseCase(): RegisterUserUseCase;
    getLoginUserUseCase(): LoginUserUseCase;
    getRefreshTokenUseCase(): RefreshTokenUseCase;
    getLogoutUserUseCase(): LogoutUserUseCase;
    getGetUrlAnalyticsUseCase(): GetUrlAnalyticsUseCase;
    getUpdateUserProfileUseCase(): UpdateUserProfileUseCase;
    getDeleteUserAccountUseCase(): DeleteUserAccountUseCase;
    getUrlController(): UrlController;
    getAuthController(): AuthController;
    getAnalyticsController(): AnalyticsController;
    getUserController(): UserController;
    getAuthMiddleware(): AuthMiddleware;
    disconnect(): Promise<void>;
}
//# sourceMappingURL=container.d.ts.map