
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  urls          Url[]
  sessions      Session[]
}

model Url {
  id          String      @id @default(cuid())
  originalUrl String
  shortCode   String      @unique
  userId      String?
  user        User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  clicks      Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  clickEvents Click[]
  analytics   Analytics?
}

model Click {
  id        String   @id @default(cuid())
  urlId     String
  url       Url      @relation(fields: [urlId], references: [id], onDelete: Cascade)
  ipAddress String?
  userAgent String?
  referer   String?
  timestamp DateTime @default(now())
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  ipAddress String?
  userAgent String?
}

model Analytics {
  id              String   @id @default(cuid())
  urlId           String   @unique
  url             Url      @relation(fields: [urlId], references: [id], onDelete: Cascade)
  totalClicks     Int      @default(0)
  uniqueVisitors  Int      @default(0)
  topReferrers    String[]
  topUserAgents   String[]
  clicksByDate    Json     @default("{}")
  lastUpdated     DateTime @default(now())
}

 